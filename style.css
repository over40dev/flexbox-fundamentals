* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: serif;
  font-size: 48px;
}

main {
  display: flex;
  flex-direction: column-reverse;
}

section {
  margin-bottom: 20px;
}

h1 {
  font-size: smaller;
}

/* Demonstrate Flexbox - Main Axis = Row */

.flex-container-row {
  display: flex;
  background: #000;

  /* Main Axis - alignment options */
  /* center | start | end | space-around | space-between */
  justify-content: center;

  min-height: 400px; /* add height to demonstrate vertical alignment */

  /* Cross Axis - alignment options */
  /* center | start | end | stretch | auto */
  align-items: center;
}

.item-row {
  width: 100px;
  min-height: 100px;
  background: blue;
  color: white;
  margin: 10px;
}

.item-row:nth-of-type(1) {
  /* align individual flex item */
  /* center | start | end | stretch | auto */
  align-self: start;
}

.item-row:nth-of-type(2) {
  /* align individual flex item */
  align-self: stretch;
}

.item-row:nth-of-type(3) {
  align-self: end;
}

/* Demonstrate Flexbox - Main Axis = Column */
.flex-container-column {
  background: #000;
  min-height: 400px;
  display: flex;
  flex-direction: column; /* column-reverse */

  /* Main Axis - alignment options */
  /* center | start | end | space-around | space-between */
  justify-content: center;

  /* Cross Axis - alignment options */
  /* center | start | end | stretch | auto */
  align-items: center;
}

.item-col {
  width: 100px;
  min-height: 100px;
  background: blue;
  color: white;
  margin: 10px;
}

/* Centering Elements */
.item-row,
.item-col {
  /* the text is now the flex-item */
  display: flex;
  justify-content: center;
  align-items: center;
}

.item-col:nth-of-type(1) {
  justify-content: start;
  align-items: start;
}

.item-col:nth-of-type(3) {
  justify-content: end;
  align-items: end;
}

/* Demonstrate Flexbox - Main Axis = Column */
.flex-container-wrap {
  background: #000;
  min-height: 400px;
  display: flex;
  flex-direction: row; /* row-reverse */
  justify-content: center;
  align-items: center;
  /* wrap items */
  flex-wrap: wrap;
}

.item-wrap {
  width: 100px;
  min-height: 100px;
  background: blue;
  color: white;
  margin: 10px;

  display: flex;
  justify-content: center;
  align-items: center;
}

/* Demonstrate Flexbox Order Property */
.flex-container-order {
  background: #000;
  min-height: 400px;
  display: flex;
  justify-content: center;
  align-items: center;
  /* wrap items */
  flex-wrap: wrap;
}

.item-order {
  background: blue;
  color: white;
  margin: 10px;
  width: 100px;
  min-height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.item-order:nth-of-type(1) {
  order: 3;
}

.item-order:nth-of-type(2) {
  order: 1;
}

.item-order:nth-of-type(3) {
  order: 2;
}

/* Demonstrate Flexbox Order Property */
.flex-container-prop {
  background: #000;
  min-height: 400px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.item-prop {
  background: blue;
  color: white;
  margin: 10px;
  flex-basis: 100px; /* starting width; same as setting width*/
  flex-grow: 1; /* all grow at the same default rate as flex-basis*/
  flex-shrink: 1; /* all shrink at the same default rate as flex-basis*/
  min-height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.item-prop:nth-of-type(1) {
  /* grows as space available relative to flex-basis (original width) */
  flex-grow: 1;
  flex-shrink: 1;
}

.item-prop:nth-of-type(2) {
  flex-basis: 200px;
  flex-grow: 0; /* do not grow as space expands (default) */
  flex-shrink: 0; /* do not shrink as space gets smaller (default) */
}

.item-prop:nth-of-type(3) {
  /* grows as space available relative to
  flex-basis (original width)
  flex-grow of 2 will grow twice as much
  flex-grow of 3 will grow 3x as much and so on
  */
  flex-grow: 3;
  flex-shrink: 3;
}